name: immich

services:
  immich-server:
    container_name: immich_server
    image: ghcr.io/immich-app/immich-server:{{ services.immich.version }}
    volumes:
      - "{{ services.immich.upload_path }}:/usr/src/app/upload"
      - /etc/localtime:/etc/localtime:ro
    environment:
      - DB_HOSTNAME=immich_postgres
      - DB_USERNAME={{ services.immich.db_username }}
      - DB_PASSWORD={{ services.immich.db_password }}
      - DB_DATABASE_NAME={{ services.immich.db_name }}
      - UPLOAD_LOCATION={{ services.immich.upload_path }}
      - REDIS_HOSTNAME=immich_redis
    ports:
      - "{{ services.immich.port }}:2283"
    depends_on:
      - immich_redis
      - immich_postgres
    restart: always
    networks:
      - {{ docker_network }}
    labels:
      # Traefik configuration (for web UI)
      - "traefik.enable=false"
      - "traefik.http.routers.immich.rule=Host(`{{ services.immich.domain }}`)"
      - "traefik.http.routers.immich.entrypoints=websecure"
      - "traefik.http.routers.immich.middlewares=secure-chain@file"
      - "traefik.http.services.immich.loadbalancer.server.port=2283"

  immich-machine-learning:
    container_name: immich_machine_learning
    image: ghcr.io/immich-app/immich-machine-learning:{{ services.immich.version }}
    volumes:
      - immich-model-cache:/cache
    environment:
      - DB_HOSTNAME=immich_postgres
      - DB_USERNAME={{ services.immich.db_username }}
      - DB_PASSWORD={{ services.immich.db_password }}
      - DB_DATABASE_NAME={{ services.immich.db_name }}
      - REDIS_HOSTNAME=immich_redis
    restart: always
    networks:
      - {{ docker_network }}

  immich_redis:
    container_name: immich_redis
    image: docker.io/redis:6.2-alpine@sha256:d6c2911ac51b289db208767581a5d154544f2b2fe4914ea5056443f62dc6e900
    healthcheck:
      test: redis-cli ping || exit 1
    restart: always
    networks:
      - {{ docker_network }}

  immich_postgres:
    container_name: immich_postgres
    image: docker.io/tensorchord/pgvecto-rs:pg14-v0.2.0@sha256:90724186f0a3517cf6914295b5ab410db9ce23190a2d9d0b9dd6463e3fa298f0
    environment:
      POSTGRES_PASSWORD: {{ services.immich.db_password }}
      POSTGRES_USER: {{ services.immich.db_username }}
      POSTGRES_DB: {{ services.immich.db_name }}
      POSTGRES_INITDB_ARGS: '--data-checksums'
    volumes:
      - "{{ services.immich.data_path }}/postgres:/var/lib/postgresql/data"
    healthcheck:
      test: pg_isready --dbname='{{ services.immich.db_name }}' || exit 1; Chksum="$$(psql --dbname='{{ services.immich.db_name }}' --username='{{ services.immich.db_username }}' --tuples-only --no-align --command='SELECT COALESCE(SUM(checksum_failures), 0) FROM pg_stat_database')"; echo "checksum failure count is $$Chksum"; [ "$$Chksum" = '0' ] || exit 1
      interval: 5m
      start_interval: 30s
      start_period: 5m
    command: ["postgres", "-c" ,"shared_preload_libraries=vectors.so", "-c", 'search_path="$$user", public, vectors', "-c", "logging_collector=on", "-c", "max_wal_size=2GB", "-c", "shared_buffers=512MB", "-c", "wal_compression=on"]
    restart: always
    networks:
      - {{ docker_network }}

volumes:
  immich-model-cache:

networks:
  {{ docker_network }}:
    external: true
