---
# Process configuration files for a single service
# item.key = service name (e.g., "copyparty")
# item.value = service configuration

- name: "Find .j2 template files for {{ item.key }}"
  find:
    paths: "../configs/{{ item.key }}"
    patterns: "*.j2"
    file_type: file
  register: j2_files
  failed_when: false

- name: "Find regular config files for {{ item.key }}"
  find:
    paths: "../configs/{{ item.key }}"
    patterns: "*"
    excludes: "*.j2"
    file_type: file
  register: regular_files
  failed_when: false

- name: "Render .j2 template files for {{ item.key }}"
  template:
    src: "{{ config_file.path }}"
    dest: "{{ item.value.config_path }}/{{ config_file.path | basename | regex_replace('\\.j2$', '') }}"
    mode: '0644'
  loop: "{{ j2_files.files }}"
  loop_control:
    loop_var: config_file
  when: j2_files.files is defined and j2_files.files | length > 0

- name: "Copy regular config files for {{ item.key }}"
  copy:
    src: "{{ config_file.path }}"
    dest: "{{ item.value.config_path }}/{{ config_file.path | basename }}"
    mode: '0644'
  loop: "{{ regular_files.files }}"
  loop_control:
    loop_var: config_file
  when: regular_files.files is defined and regular_files.files | length > 0
