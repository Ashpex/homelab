---
# Role-based entrypoint: deploys enabled services via the generic service role

- hosts: homeserver
  become: true
  vars_files:
    - ../group_vars/all/services.yml
    - ../group_vars/all/vault.yml

  tasks:
    - name: Determine target services to deploy
      set_fact:
        services_to_deploy: >-
          {{
            (services | dict2items | selectattr('key','equalto', single_service) | list)
            if (single_service is defined and single_service|length > 0)
            else (services | dict2items)
          }}

    - name: Validate requested single_service exists
      fail:
        msg: "Service '{{ single_service }}' not found in services."
      when:
        - single_service is defined
        - single_service|length > 0
        - services_to_deploy | length == 0

    - name: Resolve desired service_action
      set_fact:
        desired_service_action: "{{ service_action | default('up') }}"
    - name: Ensure Docker and base system are ready
      block:
        - name: Docker setup
          include_role:
            name: docker
        - name: Common setup
          include_role:
            name: common

    - name: Deploy enabled services via roles
      include_role:
        name: service
      vars:
        service_key: "{{ item.key }}"
        service_cfg: "{{ item.value }}"
        service_action: "{{ desired_service_action }}"
      when: (item.value.enabled | default(false)) or (single_service is defined and single_service|length > 0)
      loop: "{{ services_to_deploy }}"
      loop_control:
        label: "{{ item.key }}"
      # tags per-item are intentionally omitted to avoid templating 'item' in tags

    - name: Display service URLs
      include_tasks: display_service_urls.yml
      when: desired_service_action == 'up'
